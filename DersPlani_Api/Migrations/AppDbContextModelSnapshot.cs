// <auto-generated />
using DersPlani_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DersPlani_Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DersPlani_Api.Models.Ders", b =>
                {
                    b.Property<int>("DersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DersId"));

                    b.Property<string>("DersAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgretmenId")
                        .HasColumnType("int");

                    b.HasKey("DersId");

                    b.HasIndex("OgretmenId");

                    b.ToTable("Dersler");
                });

            modelBuilder.Entity("DersPlani_Api.Models.Ogretmen", b =>
                {
                    b.Property<int>("OgretmenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgretmenId"));

                    b.Property<string>("OgretmenAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgretmenSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OgretmenId");

                    b.ToTable("Ogretmenler");
                });

            modelBuilder.Entity("DersPlani_Api.Models.Saat", b =>
                {
                    b.Property<int>("SaatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaatId"));

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<string>("DersSaati")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SınıfId")
                        .HasColumnType("int");

                    b.HasKey("SaatId");

                    b.HasIndex("DersId");

                    b.HasIndex("SınıfId");

                    b.ToTable("Saatler");
                });

            modelBuilder.Entity("DersPlani_Api.Models.Sınıf", b =>
                {
                    b.Property<int>("SınıfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SınıfId"));

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<string>("SınıfAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SınıfId");

                    b.ToTable("Sınıflar");
                });

            modelBuilder.Entity("DersSınıf", b =>
                {
                    b.Property<int>("DerslerDersId")
                        .HasColumnType("int");

                    b.Property<int>("SınıflarSınıfId")
                        .HasColumnType("int");

                    b.HasKey("DerslerDersId", "SınıflarSınıfId");

                    b.HasIndex("SınıflarSınıfId");

                    b.ToTable("DersSınıf");
                });

            modelBuilder.Entity("DersPlani_Api.Models.Ders", b =>
                {
                    b.HasOne("DersPlani_Api.Models.Ogretmen", "Ogretmen")
                        .WithMany("Dersler")
                        .HasForeignKey("OgretmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ogretmen");
                });

            modelBuilder.Entity("DersPlani_Api.Models.Saat", b =>
                {
                    b.HasOne("DersPlani_Api.Models.Ders", "Ders")
                        .WithMany("Saatler")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DersPlani_Api.Models.Sınıf", "Sınıf")
                        .WithMany("Saatler")
                        .HasForeignKey("SınıfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Sınıf");
                });

            modelBuilder.Entity("DersSınıf", b =>
                {
                    b.HasOne("DersPlani_Api.Models.Ders", null)
                        .WithMany()
                        .HasForeignKey("DerslerDersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DersPlani_Api.Models.Sınıf", null)
                        .WithMany()
                        .HasForeignKey("SınıflarSınıfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DersPlani_Api.Models.Ders", b =>
                {
                    b.Navigation("Saatler");
                });

            modelBuilder.Entity("DersPlani_Api.Models.Ogretmen", b =>
                {
                    b.Navigation("Dersler");
                });

            modelBuilder.Entity("DersPlani_Api.Models.Sınıf", b =>
                {
                    b.Navigation("Saatler");
                });
#pragma warning restore 612, 618
        }
    }
}
